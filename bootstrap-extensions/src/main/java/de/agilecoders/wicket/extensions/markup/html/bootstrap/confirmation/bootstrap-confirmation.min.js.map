{"version":3,"sources":["jsdelivr-header.js","/npm/bootstrap-confirmation2@4.2.1/src/popover.js","/npm/bootstrap-confirmation2@4.2.1/src/confirmation.js"],"names":[],"mappings":"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","file":"/npm/bootstrap-confirmation2@4.2.1/dist/bootstrap-confirmation.js","sourceRoot":"","sourcesContent":["/**\n * Minified by jsDelivr using Terser v5.3.5.\n * Original file: /npm/bootstrap-confirmation2@4.2.1/dist/bootstrap-confirmation.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n","import $ from 'jquery';\nimport 'bootstrap';\n\nif (typeof $.fn.popover === 'undefined' || $.fn.popover.Constructor.VERSION.split('.').shift() !== '4') {\n  throw new Error('Bootstrap Confirmation 4 requires Bootstrap Popover 4');\n}\n\nconst Popover = $.fn.popover.Constructor;\n\nexport default Popover;\n","import $ from 'jquery';\nimport Popover from 'bootstrap/js/src/popover';\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'confirmation';\nconst VERSION = '$VERSION';\nconst DATA_KEY = `bs.${NAME}`;\nconst EVENT_KEY = `.${DATA_KEY}`;\nconst JQUERY_NO_CONFLICT = $.fn[NAME];\nconst BTN_CLASS_BASE = 'h-100 d-flex align-items-center';\nconst BTN_CLASS_DEFAULT = 'btn btn-sm';\n\nconst DefaultType = {\n  ...Popover.DefaultType,\n  singleton           : 'boolean',\n  popout              : 'boolean',\n  copyAttributes      : '(string|array)',\n  onConfirm           : 'function',\n  onCancel            : 'function',\n  btnOkClass          : 'string',\n  btnOkLabel          : 'string',\n  btnOkIconClass      : 'string',\n  btnOkIconContent    : 'string',\n  btnCancelClass      : 'string',\n  btnCancelLabel      : 'string',\n  btnCancelIconClass  : 'string',\n  btnCancelIconContent: 'string',\n  buttons             : 'array',\n};\n\nconst Default = {\n  ...Popover.Default,\n  _attributes         : {},\n  _selector           : null,\n  placement           : 'top',\n  title               : 'Are you sure?',\n  trigger             : 'click',\n  confirmationEvent   : undefined,\n  content             : '',\n  singleton           : false,\n  popout              : false,\n  copyAttributes      : 'href target',\n  onConfirm           : $.noop,\n  onCancel            : $.noop,\n  btnOkClass          : `${BTN_CLASS_DEFAULT} btn-primary`,\n  btnOkLabel          : 'Yes',\n  btnOkIconClass      : '',\n  btnOkIconContent    : '',\n  btnCancelClass      : `${BTN_CLASS_DEFAULT} btn-secondary`,\n  btnCancelLabel      : 'No',\n  btnCancelIconClass  : '',\n  btnCancelIconContent: '',\n  buttons             : [],\n  // @formatter:off\n  template            : `\n<div class=\"popover confirmation\">\n  <div class=\"arrow\"></div>\n  <h3 class=\"popover-header\"></h3>\n  <div class=\"popover-body\">\n    <p class=\"confirmation-content\"></p>\n    <div class=\"confirmation-buttons text-center\">\n      <div class=\"btn-group\"></div>\n    </div>\n  </div>\n</div>`,\n  // @formatter:on\n};\n\nif (Default.whiteList) {\n  Default.whiteList['*'].push('data-apply', 'data-dismiss');\n}\n\nconst ClassName = {\n  FADE: 'fade',\n  SHOW: 'show',\n};\n\nconst Selector = {\n  TITLE  : '.popover-header',\n  CONTENT: '.confirmation-content',\n  BUTTONS: '.confirmation-buttons .btn-group',\n};\n\nconst Keymap = {\n  13: 'Enter',\n  27: 'Escape',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n};\n\nconst Event = {\n  HIDE      : `hide${EVENT_KEY}`,\n  HIDDEN    : `hidden${EVENT_KEY}`,\n  SHOW      : `show${EVENT_KEY}`,\n  SHOWN     : `shown${EVENT_KEY}`,\n  INSERTED  : `inserted${EVENT_KEY}`,\n  CLICK     : `click${EVENT_KEY}`,\n  FOCUSIN   : `focusin${EVENT_KEY}`,\n  FOCUSOUT  : `focusout${EVENT_KEY}`,\n  MOUSEENTER: `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE: `mouseleave${EVENT_KEY}`,\n  CONFIRMED : `confirmed${EVENT_KEY}`,\n  CANCELED  : `canceled${EVENT_KEY}`,\n  KEYUP     : `keyup${EVENT_KEY}`,\n};\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\n// keep track of the last openned confirmation for keyboard navigation\nlet activeConfirmation;\n\nclass Confirmation extends Popover {\n  // Getters\n\n  static get VERSION() {\n    return VERSION;\n  }\n\n  static get Default() {\n    return Default;\n  }\n\n  static get NAME() {\n    return NAME;\n  }\n\n  static get DATA_KEY() {\n    return DATA_KEY;\n  }\n\n  static get Event() {\n    return Event;\n  }\n\n  static get EVENT_KEY() {\n    return EVENT_KEY;\n  }\n\n  static get DefaultType() {\n    return DefaultType;\n  }\n\n  // Constructor\n\n  constructor(element, config) {\n    super(element, config);\n\n    if ((this.config.popout || this.config.singleton) && !this.config.rootSelector) {\n      throw new Error('The rootSelector option is required to use popout and singleton features since jQuery 3.');\n    }\n\n    // keep trace of selectors\n    this._isDelegate = false;\n\n    if (config.selector) { // container of buttons\n      config._selector = `${config.rootSelector} ${config.selector}`;\n      this.config._selector = config._selector;\n    }\n    else if (config._selector) { // children of container\n      this.config._selector = config._selector;\n      this._isDelegate = true;\n    }\n    else { // standalone\n      this.config._selector = config.rootSelector;\n    }\n\n    if (this.config.confirmationEvent === undefined) {\n      this.config.confirmationEvent = this.config.trigger;\n    }\n\n    if (!this.config.selector) {\n      this._copyAttributes();\n    }\n\n    this._setConfirmationListeners();\n  }\n\n  // Overrides\n\n  isWithContent() {\n    return true;\n  }\n\n  setContent() {\n    const $tip = $(this.getTipElement());\n    let content = this._getContent();\n\n    if (typeof content === 'function') {\n      content = content.call(this.element);\n    }\n\n    this.setElementContent($tip.find(Selector.TITLE), this.getTitle());\n\n    $tip.find(Selector.CONTENT).toggle(!!content);\n    if (content) {\n      this.setElementContent($tip.find(Selector.CONTENT), content);\n    }\n\n    if (this.config.buttons.length > 0) {\n      this._setButtons($tip, this.config.buttons);\n    }\n    else {\n      this._setStandardButtons($tip);\n    }\n\n    $tip.removeClass(`${ClassName.FADE} ${ClassName.SHOW}`);\n\n    this._setupKeyupEvent();\n  }\n\n  dispose() {\n    $('body').off(`${Event.CLICK}.${this.uid}`);\n    this.eventBody = false;\n    this._cleanKeyupEvent();\n    super.dispose();\n  }\n\n  hide(callback) {\n    this._cleanKeyupEvent();\n    super.hide(callback);\n  }\n\n  // Private\n\n  /**\n   * Build configuration object\n   * Bootstrap standard is to give priority to JS config over data attributes,\n   * but for Confirmation we prefer data attributes\n   * @param config\n   * @return {*}\n   * @private\n   */\n  _getConfig(config) {\n    config = super._getConfig(config);\n\n    const dataAttributes = $(this.element).data();\n    Object.keys(dataAttributes)\n      .forEach((dataAttr) => {\n        if (dataAttr.indexOf('btn') !== 0) {\n          delete dataAttributes[dataAttr];\n        }\n      });\n\n    return {\n      ...config,\n      ...dataAttributes,\n    };\n  }\n\n  /**\n   * Copy the value of `copyAttributes` on the config object\n   * @private\n   */\n  _copyAttributes() {\n    this.config._attributes = {};\n    if (this.config.copyAttributes) {\n      if (typeof this.config.copyAttributes === 'string') {\n        this.config.copyAttributes = this.config.copyAttributes.split(' ');\n      }\n    }\n    else {\n      this.config.copyAttributes = [];\n    }\n\n    this.config.copyAttributes.forEach((attr) => {\n      this.config._attributes[attr] = $(this.element).attr(attr);\n    });\n  }\n\n  /**\n   * Custom event listeners for popouts and singletons\n   * @private\n   */\n  _setConfirmationListeners() {\n    const self = this;\n\n    if (!this.config.selector) {\n      // cancel original event\n      $(this.element).on(this.config.trigger, (e, ack) => {\n        if (!ack) {\n          e.preventDefault();\n          e.stopPropagation();\n          e.stopImmediatePropagation();\n        }\n      });\n\n      // manage singleton\n      $(this.element).on(Event.SHOWN, function () {\n        if (self.config.singleton) {\n          // close all other popover already initialized\n          $(self.config._selector).not($(this)).filter(function () {\n            return $(this).data(DATA_KEY) !== undefined;\n          }).confirmation('hide');\n        }\n      });\n    }\n    else {\n      // cancel original event\n      $(this.element).on(this.config.trigger, this.config.selector, (e, ack) => {\n        if (!ack) {\n          e.preventDefault();\n          e.stopPropagation();\n          e.stopImmediatePropagation();\n        }\n      });\n    }\n\n    if (!this._isDelegate) {\n      // manage popout\n      this.eventBody = false;\n      this.uid = this.element.id || Confirmation.getUID(`${NAME}_group`);\n\n      $(this.element).on(Event.SHOWN, () => {\n        if (self.config.popout && !self.eventBody) {\n          self.eventBody = $('body').on(`${Event.CLICK}.${self.uid}`, (e) => {\n            if ($(self.config._selector).is(e.target) || $(self.config._selector).has(e.target).length > 0) {\n              return;\n            }\n            // close all popover already initialized\n            $(self.config._selector).filter(function () {\n              return $(this).data(DATA_KEY) !== undefined;\n            }).confirmation('hide');\n\n            $('body').off(`${Event.CLICK}.${self.uid}`);\n            self.eventBody = false;\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Init the standard ok/cancel buttons\n   * @param $tip\n   * @private\n   */\n  _setStandardButtons($tip) {\n    const buttons = [\n      {\n        class      : this.config.btnOkClass,\n        label      : this.config.btnOkLabel,\n        iconClass  : this.config.btnOkIconClass,\n        iconContent: this.config.btnOkIconContent,\n        attr       : this.config._attributes,\n      },\n      {\n        class      : this.config.btnCancelClass,\n        label      : this.config.btnCancelLabel,\n        iconClass  : this.config.btnCancelIconClass,\n        iconContent: this.config.btnCancelIconContent,\n        cancel     : true,\n      },\n    ];\n\n    this._setButtons($tip, buttons);\n  }\n\n  /**\n   * Init the buttons\n   * @param $tip\n   * @param buttons\n   * @private\n   */\n  _setButtons($tip, buttons) {\n    const self = this;\n    const $group = $tip.find(Selector.BUTTONS).empty();\n\n    buttons.forEach((button) => {\n      const btn = $('<a href=\"#\"></a>')\n        .addClass(BTN_CLASS_BASE)\n        .addClass(button.class || `${BTN_CLASS_DEFAULT} btn-secondary`)\n        .html(button.label || '')\n        .attr(button.attr || (button.cancel ? {} : self.config._attributes));\n\n      if (button.iconClass || button.iconContent) {\n        btn.prepend($('<i></i>')\n          .addClass(button.iconClass || '')\n          .text(button.iconContent || ''));\n      }\n\n      btn.one('click', function (e) {\n        if ($(this).attr('href') === '#') {\n          e.preventDefault();\n        }\n\n        if (button.onClick) {\n          button.onClick.call($(self.element));\n        }\n\n        if (button.cancel) {\n          self.config.onCancel.call(self.element, button.value);\n          $(self.element).trigger(Event.CANCELED, [button.value]);\n        }\n        else {\n          self.config.onConfirm.call(self.element, button.value);\n          $(self.element).trigger(Event.CONFIRMED, [button.value]);\n          $(self.element).trigger(self.config.confirmationEvent, [true]);\n        }\n\n        self.hide();\n      });\n\n      $group.append(btn);\n    });\n  }\n\n  /**\n   * Install the keyboatd event handler\n   * @private\n   */\n  _setupKeyupEvent() {\n    activeConfirmation = this;\n    $(window)\n      .off(Event.KEYUP)\n      .on(Event.KEYUP, this._onKeyup.bind(this));\n  }\n\n  /**\n   * Remove the keyboard event handler\n   * @private\n   */\n  _cleanKeyupEvent() {\n    if (activeConfirmation === this) {\n      activeConfirmation = undefined;\n      $(window).off(Event.KEYUP);\n    }\n  }\n\n  /**\n   * Event handler for keyboard navigation\n   * @param event\n   * @private\n   */\n  _onKeyup(event) {\n    if (!this.tip) {\n      this._cleanKeyupEvent();\n      return;\n    }\n\n    const $tip = $(this.getTipElement());\n    const key = event.key || Keymap[event.keyCode || event.which];\n\n    const $group = $tip.find(Selector.BUTTONS);\n    const $active = $group.find('.active');\n    let $next;\n\n    switch (key) {\n      case 'Escape':\n        this.hide();\n        break;\n\n      case 'ArrowRight':\n        if ($active.length && $active.next().length) {\n          $next = $active.next();\n        }\n        else {\n          $next = $group.children().first();\n        }\n        $active.removeClass('active');\n        $next.addClass('active').focus();\n        break;\n\n      case 'ArrowLeft':\n        if ($active.length && $active.prev().length) {\n          $next = $active.prev();\n        }\n        else {\n          $next = $group.children().last();\n        }\n        $active.removeClass('active');\n        $next.addClass('active').focus();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  // Static\n\n  /**\n   * Generates an uui, copied from Bootrap's utils\n   * @param {string} prefix\n   * @returns {string}\n   */\n  static getUID(prefix) {\n    let uid = prefix;\n    do {\n      // eslint-disable-next-line no-bitwise\n      uid += ~~(Math.random() * 1000000); // \"~~\" acts like a faster Math.floor() here\n    } while (document.getElementById(uid));\n    return uid;\n  }\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY);\n\n      const _config = typeof config === 'object' ? config : {};\n      _config.rootSelector = $(this).selector || _config.rootSelector; // this.selector removed in jQuery > 3\n\n      if (!data && /destroy|hide/.test(config)) {\n        return;\n      }\n\n      if (!data) {\n        data = new Confirmation(this, _config);\n        $(this).data(DATA_KEY, data);\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n        data[config]();\n      }\n    });\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Confirmation._jQueryInterface;\n$.fn[NAME].Constructor = Confirmation;\n$.fn[NAME].noConflict = function () {\n  $.fn[NAME] = JQUERY_NO_CONFLICT;\n  return Confirmation._jQueryInterface;\n};\n\nexport default Confirmation;\n"]}